{"version":3,"file":"static/js/760.2546f4da.chunk.js","mappings":"gMAAIA,EAAOC,E,8BCmBAC,EAAS,WAAH,IAAIC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC5BG,OAAOC,gBAAgB,IAAIC,WAAWN,IAAOO,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGV,GAAG,GAAG,E,mBC9BKG,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yNAWlBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sHAQpBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oGAOpBK,EAASP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wOF3B/BO,EAAY,CAAC,QAAS,WAC1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAIC,EAAS3B,UAAU0B,GAAI,IAAK,IAAIE,KAAOD,EAAcJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQH,EAAOG,GAAOD,EAAOC,GAAU,CAAE,OAAOH,CAAQ,EAAUH,EAASU,MAAMC,KAAMjC,UAAY,CAC5T,SAASkC,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKF,EAAnED,EACzF,SAAuCE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKF,EAA5DD,EAAS,CAAC,EAAOW,EAAab,OAAOc,KAAKV,GAAqB,IAAKD,EAAI,EAAGA,EAAIU,EAAWnC,OAAQyB,IAAOE,EAAMQ,EAAWV,GAAQS,EAASG,QAAQV,IAAQ,IAAaH,EAAOG,GAAOD,EAAOC,IAAQ,OAAOH,CAAQ,CADhNc,CAA8BZ,EAAQQ,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBb,GAAS,IAAKD,EAAI,EAAGA,EAAIe,EAAiBxC,OAAQyB,IAAOE,EAAMa,EAAiBf,GAAQS,EAASG,QAAQV,IAAQ,GAAkBL,OAAOM,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBH,EAAOG,GAAOD,EAAOC,GAAQ,CAAE,OAAOH,CAAQ,CAG3e,SAASkB,EAAOC,EAAMC,GACpB,IAAIC,EAAQF,EAAKE,MACfC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAMvB,GACzC,OAAoB,gBAAoB,MAAOC,EAAS,CACtD2B,MAAO,6BACPC,QAAS,YACTC,IAAKN,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DvC,GAAIwC,GACHD,GAAS,KAAMlD,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EwD,EAAG,gBACHC,KAAM,UACHxD,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEuD,EAAG,yCAEP,CACA,I,MGxBI,EAAO,EHwBPE,EAA0B,aAAiBX,G,GAChC,I,SIrBFY,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAU,EAMlDC,EAAiB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAM,EAI/CC,GAAwBC,EAAAA,EAAAA,IACnC,CAACH,ECdyB,SAAAH,GAAK,OAAIA,EAAMO,MAAO,IDehD,SAACN,EAAUM,GAET,OAAON,EAASM,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cAAc,GAE7D,I,mBEVIE,EAActE,IACduE,EAAgBvE,IAGTwE,EAAc,WACzB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BN,EAAIQ,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBpB,GAAWuB,EAAAA,EAAAA,IAAYrB,GACvBsB,GAAWC,EAAAA,EAAAA,MAwBXC,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,cAAtBrB,EAAIoB,EAAJpB,KAAMsB,EAAKF,EAALE,MACd,OAAQtB,GACN,IAAK,OACHU,EAAQY,GACR,MACF,IAAK,SACHR,EAAUQ,GACV,MACF,QACE,OAEN,EACA,OACEC,EAAAA,EAAAA,MAAC7E,EAAI,CAAC8E,SAnCa,SAAAL,GACnBA,EAAMM,iBAGejC,EAASkC,MAC5B,SAAA3B,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBD,EAAKC,aAAa,IAK5D0B,MAAM,GAADC,OAAI5B,EAAI,6BAKfgB,GAASa,EAAAA,EAAAA,IAAY,CAAE7B,KAAAA,EAAMa,OAAAA,KAC7BH,EAAQ,IACRI,EAAU,IACZ,EAiB+BgB,SAAA,EAC3BP,EAAAA,EAAAA,MAACzE,EAAK,CAACiF,QAAS5B,EAAY2B,SAAA,CAAC,QAE3BE,EAAAA,EAAAA,KAAChF,EAAK,CACJiF,KAAK,OACLjC,KAAK,OACLkC,YAAY,iBACZZ,MAAOtB,EACPmC,SAAUjB,EACVkB,QAAQ,+CACRvD,MAAM,6DACNwD,UAAQ,QAIZd,EAAAA,EAAAA,MAACzE,EAAK,CAACiF,QAAS3B,EAAc0B,SAAA,CAAC,UAE7BE,EAAAA,EAAAA,KAAChF,EAAK,CACJiF,KAAK,MACLjC,KAAK,SACLkC,YAAY,0BACZZ,MAAOT,EACPsB,SAAUjB,EACVkB,QAAQ,aACRE,UAAU,KACVC,UAAU,KACV1D,MAAM,8DACNwD,UAAQ,QAIZd,EAAAA,EAAAA,MAACrE,EAAM,CAAC+E,KAAK,SAAQH,SAAA,EACnBE,EAAAA,EAAAA,KAACQ,EAAO,CAACpD,KAAK,UAAUqD,MAAM,KAAKC,OAAO,OAAO,cACrC,SAIpB,EC5FaC,EAAOhG,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yOAYhB+F,EAAOjG,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uOAYhBK,EAASP,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wKJzB/B,EAAY,CAAC,QAAS,WAC1B,SAAS,IAA2Q,OAA9P,EAAWS,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAIC,EAAS3B,UAAU0B,GAAI,IAAK,IAAIE,KAAOD,EAAcJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQH,EAAOG,GAAOD,EAAOC,GAAU,CAAE,OAAOH,CAAQ,EAAU,EAASO,MAAMC,KAAMjC,UAAY,CAC5T,SAAS,EAAyB2B,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKF,EAAnED,EACzF,SAAuCE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKF,EAA5DD,EAAS,CAAC,EAAOW,EAAab,OAAOc,KAAKV,GAAqB,IAAKD,EAAI,EAAGA,EAAIU,EAAWnC,OAAQyB,IAAOE,EAAMQ,EAAWV,GAAQS,EAASG,QAAQV,IAAQ,IAAaH,EAAOG,GAAOD,EAAOC,IAAQ,OAAOH,CAAQ,CADhN,CAA8BE,EAAQQ,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBb,GAAS,IAAKD,EAAI,EAAGA,EAAIe,EAAiBxC,OAAQyB,IAAOE,EAAMa,EAAiBf,GAAQS,EAASG,QAAQV,IAAQ,GAAkBL,OAAOM,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBH,EAAOG,GAAOD,EAAOC,GAAQ,CAAE,OAAOH,CAAQ,CAG3e,SAASqF,EAAUlE,EAAMC,GACvB,IAAIC,EAAQF,EAAKE,MACfC,EAAUH,EAAKG,QACfC,EAAQ,EAAyBJ,EAAM,GACzC,OAAoB,gBAAoB,MAAO,EAAS,CACtDK,MAAO,6BACPC,QAAS,YACTC,IAAKN,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DvC,GAAIwC,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EM,EAAG,gBACHC,KAAM,UACH,IAAW,EAAsB,gBAAoB,OAAQ,CAChED,EAAG,mFAEP,CACA,IAAI,EAA0B,aAAiB0D,GKflCC,GLgBE,IKhBY,WACzB,IAAMtD,GAAWuB,EAAAA,EAAAA,IAAYnB,GACvBoB,GAAWC,EAAAA,EAAAA,MACjB,OACEe,EAAAA,EAAAA,KAACW,EAAI,CAAAb,SACFtC,EAASuD,KAAI,SAAAhD,GAAO,OACnBwB,EAAAA,EAAAA,MAACqB,EAAI,CAAAd,SAAA,CACF/B,EAAQC,KAAO,MAAQD,EAAQc,QAG9BU,EAAAA,EAAAA,MAACrE,EAAM,CACL+E,KAAK,SACLjC,KAAK,SACLgD,QAAS,kBAAMhC,GAASiC,EAAAA,EAAAA,IAAelD,EAAQzD,IAAI,EAACwF,SAAA,EAEpDE,EAAAA,EAAAA,KAACkB,EAAU,CAAC9D,KAAK,UAAUqD,MAAM,KAAKC,OAAO,OAAO,cAT/C3C,EAAQzD,GAaZ,KAIf,G,UCvBe,SAAS6G,IACtB,IAAMnC,GAAWC,EAAAA,EAAAA,MACXxB,GAAYsB,EAAAA,EAAAA,IAAYzB,GAM9B,OAJA8D,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACX,GAAG,CAACrC,KAGFO,EAAAA,EAAAA,MAAA+B,EAAAA,SAAA,CAAAxB,SAAA,EACEE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,mBACPE,EAAAA,EAAAA,KAAC3B,EAAW,IAAG,KACf2B,EAAAA,EAAAA,KAAA,OAAAF,SAAMrC,IAAauC,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,MAAW,KAErCvB,EAAAA,EAAAA,KAACc,EAAW,IAAG,MAGrB,C","sources":["components/icons/add.svg","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.styled.jsx","components/icons/delete.svg","redux/contacts/selectors.js","redux/filter/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAdd(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.b32f3a092015d7a228e03084a624cb0b.svg\";\nexport { ForwardRef as ReactComponent };","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  background-color: rgba(0, 0, 0, 0.1);\n  // border: 3px solid #008000;\n  border: 3px solid #cc0000;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: #cc0000;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border: 1px solid #cc0000;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #cc0000;\n  color: #cc0000;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.5575697b2be19e4c4b67136f6fa197b3.svg\";\nexport { ForwardRef as ReactComponent };","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../../redux/filter/selectors';\n\n// Функція selectLoading вибирає прапор isLoading зі стану contacts.\nexport const selectLoading = state => state.contacts.isLoading;\n\n// Функція selectError приймає об'єкт стану state і повертає значення якості error з об'єкта стану contacts.\nexport const selectError = state => state.contacts.error;\n\n// Функція selectContacts приймає об'єкт стану state і повертає значення властивості items з об'єкта стану contacts.\nexport const selectContacts = state => state.contacts.items; // Возвращает список контактов из состояния\n\n// Функція selectVisibleContacts використовує функцію createSelector для створення селектора, який залежить від двох інших селекторів: selectContacts і selectFilter.\n// Селектор selectVisibleContacts повертає відфільтрований масив контактів, де ім'я контакту contact.name містить рядок фільтра filter.\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    // Фильтрует контакты, чтобы возвращать только те, чьи имена содержат подстроку фильтра (в нижнем регистре)\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// Функція selectFilter приймає об'єкт стану state та повертає значення властивості filter з об'єкта стану.\nexport const selectFilter = state => state.filter;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\n// import { Filter } from 'components/Filter/Filter';\nimport { Form, Label, Button, Input } from './ContactForm.styled';\nimport { ReactComponent as AddIcon } from '../icons/add.svg';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContacts } from '../../redux/contacts/operations';\n\n// Генерація унікальних ідентифікаторів для полів форми\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\n// Компонент ContactForm відповідає за форму додавання нового контакту\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  // Обрабка відправки форми\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Перевіряємо, чи контакт з таким іменем вже існує в списку контактів\n    const isInContacts = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    // Перевірка чи існує контакт з таким іменем. Якщо контакт вже існує, з'являється попередження.\n    if (isInContacts) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    //Виклик функції onSubmit із батьківського компонента з передачею об'єкта контакта\n    dispatch(addContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  // Обробка зміни значень полів форми\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nameInputId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter the name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я\\s'\\-]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces\"\n          required\n        />\n      </Label>\n\n      <Label htmlFor={numberInputId}>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter your phone number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+\\d{12}\"\n          minlength=\"13\"\n          maxlength=\"13\"\n          title=\"The phone number must consist of 12 digits and start with +\"\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\">\n        <AddIcon fill=\"#cc0000\" width=\"25\" height=\"25\" />\n        Add contact{' '}\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, 0.6);\n  border: 3px solid #cc0000;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  background-color: #ffffff;\n  border: 3px solid #cc0000;\n  padding: 10px;\n  border-radius: 4px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 4px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px 8px;\n  border: 3px solid #cc0000;\n  display: flex;\n  align-items: center;\n`;\n","import React from 'react';\nimport { List, Item, Button } from './ContactList.styled';\nimport { ReactComponent as DeleteIcon } from '../icons/delete.svg';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { deleteContacts } from '../../redux/contacts/operations';\n\n// Компонент списку контактів відповідає за відображення списку контактів\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          {contact.name + ' : ' + contact.number}\n          {\n            // Кнопка видалення контакта\n            <Button\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => dispatch(deleteContacts(contact.id))}\n            >\n              <DeleteIcon fill=\"#000000\" width=\"20\" height=\"20\" />\n              delete\n            </Button>\n          }\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectLoading } from '../redux/contacts/selectors';\nimport { Loader } from '../components/Loader/Loader';\n\n// Компонент Tasks відповідає за відображення списку контактів та їх форми\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts()); // Виконуємо запит для отримання контактів з сервера\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <ContactForm /> {/* Компонент форми для додавання контакту */}\n      <div>{isLoading && <Loader />}</div>{' '}\n      {/* Відображення повідомлення про виконання запиту */}\n      <ContactList /> {/* Компонент для відображення списку контактів */}\n    </>\n  );\n}\n"],"names":["_path","_path2","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","_excluded","_extends","Object","assign","target","i","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAdd","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","d","fill","ForwardRef","selectLoading","state","contacts","isLoading","selectContacts","items","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","nameInputId","numberInputId","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","_event$currentTarget","currentTarget","value","_jsxs","onSubmit","preventDefault","some","alert","concat","addContacts","children","htmlFor","_jsx","type","placeholder","onChange","pattern","required","minlength","maxlength","AddIcon","width","height","List","Item","SvgDelete","ContactList","map","onClick","deleteContacts","DeleteIcon","Tasks","useEffect","fetchContacts","_Fragment","Loader"],"sourceRoot":""}